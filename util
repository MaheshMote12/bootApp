@startuml
actor "External User" as User
participant "Consumer App" as App
participant "Auth Server" as Auth
participant "QR API Service" as QR
database "QR DB" as DB

== Token Request with User ID ==
User -> App : Logs in or initiates action
App -> Auth : POST /oauth2/token\n(grant_type=client_credentials,\nclient_id, client_secret,\nuser_id=alice123)
Auth -> Auth : Validate client credentials
Auth -> Auth : Add user_id to JWT claims
Auth -> App : 200 OK\n{ access_token (JWT with client_id + user_id) }

== QR Code Generation ==
App -> QR : POST /qr/generate\nAuthorization: Bearer token\nBody: { data only }
QR -> QR : Decode token\nExtract client_id and user_id
QR -> DB : Store QR with\nclient_id + user_id + data
DB --> QR : QR ID

QR -> App : 201 Created\n{ qr_id }

== QR Retrieval ==
App -> QR : GET /qr/{qr_id}\nAuthorization: Bearer token
QR -> QR : Decode token\nValidate client_id + user_id
QR -> DB : Fetch QR by id
DB --> QR : QR data
QR -> App : 200 OK\nQR metadata

@enduml








@startuml
actor Developer as Dev
participant "Consumer App" as App
participant "Auth Server" as Auth
participant "QR API Service" as QR
database "QR DB" as DB

Dev -> App : Configured with client_id & secret

== Token Request ==
App -> Auth : POST /oauth2/token\n(client_id, client_secret, grant_type=client_credentials)
Auth -> App : 200 OK\n{ access_token (JWT with client_id) }

== QR Generation ==
App -> QR : POST /qr/generate\nAuthorization: Bearer token\nBody: { user_id, data }
QR -> QR : Validate token & extract client_id
QR -> QR : Validate input & user_id
QR -> DB : Store QR code with\nclient_id + user_id + qr_data
DB --> QR : QR ID

QR -> App : 201 Created\n{ qr_id }

== Optional QR Lookup ==
App -> QR : GET /qr/{qr_id}\nAuthorization: Bearer token
QR -> QR : Validate token & ensure\nclient_id owns this qr_id
QR -> DB : Fetch QR code by id
DB --> QR : QR code data
QR -> App : 200 OK\nQR metadata + image

@enduml




use case diagram 

@startuml
left to right direction
skinparam packageStyle rectangle

actor "Admin" as Admin
actor "External App" as App
actor "End User" as User

rectangle "QR Code Service" {
  
  (Register Client App) as UC1
  (Request Token with user_id) as UC2
  (Generate QR Code) as UC3
  (Retrieve QR Code) as UC4
  (Store QR Code per client and user) as UC5
  (Validate Access Token) as UC6
  (Manage Clients and Limits) as UC7

  Admin --> UC1
  Admin --> UC7

  App --> UC2
  App --> UC3
  App --> UC4

  UC3 --> UC5
  UC4 --> UC5
  UC2 --> UC6
  UC3 --> UC6
  UC4 --> UC6

  User --> App : uses client app
}

@enduml

